"go_0020s"について                              川合秀実  kawai@imasy.org

・これは何か？

  これは、go_0020w/go_0020oのソースです。go_0020wというのは、gcc-3.2を改造して
作ったコンパイラのwin32版バイナリです。go_0020oはそのOSASK版です。

  細かいことをいうと、このgo_0020sは、gcc-3.2のソースにgo_0020pのパッチをあてた
後のソースです。go_0020sだけで全てのソースが含まれていますので、go_0020sを持っ
ていればgo_0020pは不要です。

  （姉妹品のまとめ）
    go_0020w : win32版バイナリ               (GPL)
    go_0020o : OSASK版バイナリ               (GPL)
    go_0020s : go_0020w, oのソース           (GPL)
    go_0020p : go_0020sとgcc-3.2ソースの差分 (KL-01)

・どうやって、実行バイナリを作るのか？

  makeに先立ち、include/rule.makを設定します。まずディレクトリgo_0020sの中で
setmode goとすれば、win32上のGOでmakeできる状態になります。またsetmode gccとす
れば、win32のAPIを直接呼び出すことはしないでANSI-Cの標準ライブラリだけを使うよ
うになります。この状態ならMinGWやGO+w32clibcでmakeできる状態になります。いずれ
にしてもこのrule.makは雛形でしかないので、各自の環境に合わせてパスを書き込んで
ください（w32clibcを使うなら、include/rule.makをさらに若干書き換える必要がある
でしょう）。

  go版の場合、go_0009wかそれ以降でmakeします。基本的にはディレクトリgccの中で
"make"とすれば、cpp0.exe、cc1.exe、cc1plus.exeの3つができます。詳しいことは
Makefileを解析してください。簡単な構造ですから、読めると思います。3つができた後
にupx -9 *.exeとすれば、それぞれふさわしいサイズになります。

  gcc版の場合は、まず下記の通りに、golib00、gas2nask、naskcnv0、sjisconvのstdc
版を作ります（これらのツールはcpp0、cc1、cc1plusの生成に必要）。そしてディレク
トリgccの中で"make"とすれば、cpp0.exe、cc1.exe、cc1plus.exeの3つができます。

  また、ディレクトリgccの中で"make -r osaskgo.bin"とすれば、OSASK版のバイナリも
できます。

  golib00w、gas2nask、nask、sjisconv、naskcnv0については、toolw32とtoolstdcの両
方に入っています。setmode goの場合は、toolw32の中でmakeとすれば、それぞれ生成さ
れます。setmode gccの場合は、toolstdcの中でmakeします。それぞれupxすると、配布
版バイナリになります。

・ライセンスについて

  このソースセットはGPLでライセンスします。もし、GPLではなくKL-01でライセンスさ
れたソースがほしい人は、go_0020pのほうを当たってください。

  なお以下のディレクトリに関しては、例外的にKL-01(川合堂ライセンス-01)です。
    drv_osa, drv_stdc, drv_w32, funcs, go_lib, nasklib, omake, toolstdc,
    toolw32, w32clibc

  GPLのライセンス文はCopyingに、KL-01のライセンス文は以下のURLにあります。
        http://www.imasy.org/‾mone/kawaido/license01-1.0.html

  GPL部分の著作権については、それぞれの元著作者に帰します。KL-01部分の著作権に
ついては、go_lib内のstring系関数群の著作権はGakuさんに、それ以外は川合に帰しま
す。

・libmingw.libについて

  libmingwは、MinGWのライブラリから実行バイナリ生成にどうしても必要なものだけを
集めた簡易ライブラリです。このライセンスは当然GPLです。

・謝辞

  gccの開発者のみなさまに心からの謝辞をささげます。もしこのgoの一部がgccの開発
者の方々に認めていただけたら、こんなに嬉しいことはありません。

  Gakuさんのstringライブラリを使わせていただきました。Gakuさん、ありがとうござ
います。

  また開発を直接助けてくれた、くーみんさん、henohenoさん、そしてOSASKコミュニテ
ィーのみなさま、ありがとうございました。

  なお、川合の2002.10.03〜2003.02.28の期間のおける開発成果は、特別認可法人 情報
処理振興事業協会 (IPA) の「未踏ソフトウェア創造事業未踏ユース」での委託業務によ
るものです。この場を借りて支援をいただけたことにたいしてお礼申し上げます。

・どこが変わったか？

  機能的な違いについては、バイナリ版を参照してください。ここでは、ソースレベル
での違いだけに言及しています。

< go_0000s → go_0001s >

  includeディレクトリ内の2つのファイルを削除しました。これはmakeに不要なファイ
ルでした。ソース内の改行コードが、CRLFとLFのみのものが混在していました。LFのみ
に統一しました。delaln32のバイナリとソースも一応入れておくことにしました。

< go_0001s → go_0002s >

  ドライバ(drv_stdc)内のファイル以外の全ては、外部のインクルードファイルを必要
としません。自分が持っているライブラリだ